import discord
from discord.ext import commands
import asyncio
import json
import os
from datetime import datetime

# –§–∞–π–ª —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å–¥–µ–ª–∫–∞—Ö
EXCHANGES_FILE = "data/exchanges/exchanges.json"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs(os.path.dirname(EXCHANGES_FILE), exist_ok=True)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Å–¥–µ–ª–∫–∞—Ö
def load_exchanges():
    if os.path.exists(EXCHANGES_FILE):
        with open(EXCHANGES_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    return {"exchanges": [], "active_tickets": {}}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–¥–µ–ª–∫–∞—Ö
def save_exchanges(data):
    with open(EXCHANGES_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

# –ö–ª–∞—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserSelect(discord.ui.UserSelect):
    def __init__(self, author_id):
        self.author_id = author_id
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–¥–µ–ª–∫–∏",
            min_values=1,
            max_values=1,
        )

    async def callback(self, interaction: discord.Interaction):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±–æ—Ä —Å–¥–µ–ª–∞–ª –∞–≤—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞
        if interaction.user.id != self.author_id:
            await interaction.response.send_message("–¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–¥–µ–ª–∫–∏.", ephemeral=True)
            return
        
        selected_user = self.values[0]
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª —Å–µ–±—è
        if selected_user.id == self.author_id:
            await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Å–µ–±—è –¥–ª—è —Å–¥–µ–ª–∫–∏.", ephemeral=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±–æ—Ç
        if selected_user.bot:
            await interaction.response.send_message("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –±–æ—Ç–∞ –¥–ª—è —Å–¥–µ–ª–∫–∏.", ephemeral=True)
            return
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ —Å–¥–µ–ª–∫–∏
        await create_exchange_ticket(interaction, selected_user)

# –ö–ª–∞—Å—Å –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏
class ExchangeButton(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)  # –ö–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–Ω–∞ –≤—Å–µ–≥–¥–∞
    
    @discord.ui.button(label="–°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É", style=discord.ButtonStyle.primary, custom_id="create_exchange", emoji="üîÑ")
    async def create_exchange(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        view = discord.ui.View(timeout=60)
        view.add_item(UserSelect(interaction.user.id))
        
        await interaction.response.send_message(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É:",
            view=view,
            ephemeral=True
        )

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ —Å–¥–µ–ª–∫–∏
async def create_exchange_ticket(interaction, partner):
    guild = interaction.guild
    author = interaction.user
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–∏–∫–µ—Ç–æ–≤ –∏–∑ .env
    ticket_category_id = int(os.getenv("TICKET_CATEGORY_ID"))
    category = guild.get_channel(ticket_category_id)
    
    if not category:
        await interaction.response.send_message("–û—à–∏–±–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞ —Ç–∏–∫–µ—Ç–∞
    ticket_name = f"—Å–¥–µ–ª–∫–∞-{author.name}-{partner.name}"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Ç–∏–∫–µ—Ç–∞
    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False),
        author: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        partner: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True, manage_channels=True)
    }
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    for role in guild.roles:
        if role.permissions.administrator:
            overwrites[role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Ç–∏–∫–µ—Ç–∞
    ticket_channel = await guild.create_text_channel(
        name=ticket_name,
        category=category,
        overwrites=overwrites,
        topic=f"–°–¥–µ–ª–∫–∞ –º–µ–∂–¥—É {author.name} –∏ {partner.name}"
    )
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∏–∫–µ—Ç–µ
    exchanges = load_exchanges()
    exchanges["active_tickets"][str(ticket_channel.id)] = {
        "author_id": author.id,
        "partner_id": partner.id,
        "created_at": datetime.now().isoformat(),
        "status": "open"
    }
    save_exchanges(exchanges)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ .env
    admin_role_id = os.getenv("ADMIN_ROLE_ID", "0")
    admin_mention = f"<@&{admin_role_id}>" if admin_role_id != "0" else ""
    
    # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª —Ç–∏–∫–µ—Ç–∞
    embed = discord.Embed(
        title="üîÑ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–¥–µ–ª–∫—É",
        description=f"–°–¥–µ–ª–∫–∞ –º–µ–∂–¥—É {author.mention} –∏ {partner.mention}",
        color=discord.Color.blue()
    )
    
    embed.add_field(
        name="üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
        value=(
            "1. –û–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å\n"
            "2. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞\n"
            "3. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç —Å–¥–µ–ª–∫—É\n"
            "4. –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ —Ç–∏–∫–µ—Ç –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç"
        ),
        inline=False
    )
    
    embed.add_field(
        name="‚ö†Ô∏è –í–∞–∂–Ω–æ",
        value=(
            "- –ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã –∏ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã\n"
            "- –ß–µ—Ç–∫–æ –æ–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å–¥–µ–ª–∫–∏\n"
            "- –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä–µ–¥ —Å–¥–µ–ª–∫–æ–π\n"
            "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `!closeexchange` –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞"
        ),
        inline=False
    )
    
    embed.set_footer(text=f"ID —Ç–∏–∫–µ—Ç–∞: {ticket_channel.id}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–º
    view = discord.ui.View(timeout=None)
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
    close_button = discord.ui.Button(
        style=discord.ButtonStyle.danger,
        label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç",
        emoji="üîí",
        custom_id=f"close_exchange_{ticket_channel.id}"
    )
    view.add_item(close_button)
    
    await ticket_channel.send(
        content=f"{author.mention} {partner.mention} {admin_mention}",
        embed=embed,
        view=view
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await interaction.edit_original_response(
        content=f"‚úÖ –¢–∏–∫–µ—Ç –¥–ª—è —Å–¥–µ–ª–∫–∏ —Å–æ–∑–¥–∞–Ω! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª {ticket_channel.mention}",
        view=None
    )

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å–¥–µ–ª–∫–∏ –≤ —Ñ–æ—Ä—É–º–µ
async def create_exchange_post(ctx, channel_id, title, description, image_url=None):
    channel = ctx.guild.get_channel(int(channel_id))
    
    if not channel:
        await ctx.send("‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞–Ω–∞–ª —Ñ–æ—Ä—É–º–æ–º
    if not isinstance(channel, discord.ForumChannel):
        await ctx.send("‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ä—É–º–æ–º.")
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    embed = discord.Embed(
        title=title,
        description=description,
        color=discord.Color.blue()
    )
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
    if image_url:
        embed.set_image(url=image_url)
    
    embed.add_field(
        name="–ö–∞–∫ –Ω–∞—á–∞—Ç—å —Å–¥–µ–ª–∫—É?",
        value="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É¬ª –Ω–∏–∂–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É.",
        inline=False
    )
    
    embed.add_field(
        name="–ü—Ä–∞–≤–∏–ª–∞ —Å–¥–µ–ª–æ–∫",
        value=(
            "1. –°–¥–µ–ª–∫–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã\n"
            "2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –≥–∞—Ä–∞–Ω—Ç–æ–º —Å–¥–µ–ª–∫–∏\n"
            "3. –ó–∞–ø—Ä–µ—â–µ–Ω—ã –æ–±–º–∞–Ω—ã –∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ\n"
            "4. –ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å–¥–µ–ª–∫–∏"
        ),
        inline=False
    )
    
    embed.set_footer(text="‚ú® Powered by MrFolium ‚ú®")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–¥–µ–ª–∫–∏
    view = ExchangeButton()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–º—ã –≤ —Ñ–æ—Ä—É–º–µ
    thread = await channel.create_thread(
        name=title,
        content="–°–∏—Å—Ç–µ–º–∞ —Å–¥–µ–ª–æ–∫",
        embed=embed,
        view=view
    )
    
    await ctx.send(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —Å–¥–µ–ª–∫–∏ —Å–æ–∑–¥–∞–Ω–æ –≤ —Ñ–æ—Ä—É–º–µ: {thread.mention}")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ —Å–¥–µ–ª–∫–∏
async def close_exchange_ticket(interaction, ticket_id):
    channel = interaction.guild.get_channel(int(ticket_id))
    
    if not channel:
        await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª —Ç–∏–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–¥–µ–ª–∫–∏ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    exchanges = load_exchanges()
    ticket_info = exchanges["active_tickets"].get(str(ticket_id))
    
    if not ticket_info:
        await interaction.response.send_message("‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∏–∫–µ—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        return
    
    is_admin = interaction.user.guild_permissions.administrator
    is_participant = (interaction.user.id == ticket_info["author_id"] or 
                      interaction.user.id == ticket_info["partner_id"])
    
    if not (is_admin or is_participant):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —ç—Ç–æ–≥–æ —Ç–∏–∫–µ—Ç–∞.", ephemeral=True)
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–∫—Ä—ã—Ç–∏–∏
    await interaction.response.send_message("üîí –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞ —Å–¥–µ–ª–∫–∏...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫—Ä—ã—Ç–∏–∏
    embed = discord.Embed(
        title="üîí –¢–∏–∫–µ—Ç —Å–¥–µ–ª–∫–∏ –∑–∞–∫—Ä—ã—Ç",
        description=f"–¢–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.mention}",
        color=discord.Color.red()
    )
    
    embed.add_field(
        name="–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–¥–µ–ª–∫–∏",
        value=f"<@{ticket_info['author_id']}> –∏ <@{ticket_info['partner_id']}>",
        inline=False
    )
    
    embed.add_field(
        name="–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è",
        value=f"<t:{int(datetime.fromisoformat(ticket_info['created_at']).timestamp())}:F>",
        inline=True
    )
    
    embed.add_field(
        name="–í—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è",
        value=f"<t:{int(datetime.now().timestamp())}:F>",
        inline=True
    )
    
    await channel.send(embed=embed)
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ç–∏–∫–µ—Ç–∞
    ticket_info["status"] = "closed"
    ticket_info["closed_at"] = datetime.now().isoformat()
    ticket_info["closed_by"] = interaction.user.id
    save_exchanges(exchanges)
    
    # –ê—Ä—Ö–∏–≤–∞—Ü–∏—è –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    await asyncio.sleep(10)
    
    try:
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞, —á—Ç–æ–±—ã –Ω–∏–∫—Ç–æ –Ω–µ –º–æ–≥ –ø–∏—Å–∞—Ç—å
        overwrites = channel.overwrites
        for target, overwrite in overwrites.items():
            overwrite.send_messages = False
            overwrites[target] = overwrite
        
        await channel.edit(overwrites=overwrites)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∫ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞–Ω–∞–ª–∞
        new_name = f"–∑–∞–∫—Ä—ã—Ç-{channel.name}"
        await channel.edit(name=new_name)
        
        # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ –∞—Ä—Ö–∏–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        archive_category_id = os.getenv("ARCHIVE_CATEGORY_ID")
        if archive_category_id:
            archive_category = interaction.guild.get_channel(int(archive_category_id))
            if archive_category:
                await channel.edit(category=archive_category)
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è
async def setup_exchange_system(bot):
    # –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π —Å–¥–µ–ª–∫–∏
    @bot.command(name="createexchange")
    @commands.has_permissions(administrator=True)
    async def create_exchange_command(ctx, channel_id: str, *, title_and_description: str):
        """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —Å–¥–µ–ª–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä—É–º–µ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_url = None
            if ctx.message.attachments:
                image_url = ctx.message.attachments[0].url
            
            # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
            parts = title_and_description.split('|', 1)
            if len(parts) < 2:
                await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `!createexchange ID_–∫–∞–Ω–∞–ª–∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫ | –û–ø–∏—Å–∞–Ω–∏–µ`")
                return
            
            title = parts[0].strip()
            description = parts[1].strip()
            
            await create_exchange_post(ctx, channel_id, title, description, image_url)
        
        except Exception as e:
            await ctx.send(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    
    # –ö–æ–º–∞–Ω–¥–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ —Å–¥–µ–ª–∫–∏
    @bot.command(name="closeexchange")
    async def close_exchange_command(ctx):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç–∏–∫–µ—Ç —Å–¥–µ–ª–∫–∏"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ —Ç–∏–∫–µ—Ç–∞
        exchanges = load_exchanges()
        if str(ctx.channel.id) not in exchanges["active_tickets"]:
            await ctx.send("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ —Ç–∏–∫–µ—Ç–∞ —Å–¥–µ–ª–∫–∏.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        ticket_info = exchanges["active_tickets"][str(ctx.channel.id)]
        is_admin = ctx.author.guild_permissions.administrator
        is_participant = (ctx.author.id == ticket_info["author_id"] or 
                          ctx.author.id == ticket_info["partner_id"])
        
        if not (is_admin or is_participant):
            await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —ç—Ç–æ–≥–æ —Ç–∏–∫–µ—Ç–∞.")
            return
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
        class DummyInteraction:
            def __init__(self, ctx):
                self.guild = ctx.guild
                self.user = ctx.author
                self.response = self
            
            async def send_message(self, content, ephemeral=False):
                await ctx.send(content)
        
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞
        await close_exchange_ticket(DummyInteraction(ctx), ctx.channel.id)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
    @bot.listen('on_interaction')
    async def exchange_interaction_handler(interaction):
        if interaction.type == discord.InteractionType.component:
            custom_id = interaction.data.get("custom_id", "")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
            if custom_id.startswith("close_exchange_"):
                ticket_id = custom_id.split("_")[-1]
                await close_exchange_ticket(interaction, ticket_id)

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    bot.add_view(ExchangeButton())
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥—É–ª–µ –≤ –∫–æ–º–∞–Ω–¥—É !adminhelp
    if hasattr(bot, 'admin_help_info'):
        bot.admin_help_info.append({
            "name": "–°–∏—Å—Ç–µ–º–∞ —Å–¥–µ–ª–æ–∫",
            "commands": [
                {"name": "!createexchange <ID_–∫–∞–Ω–∞–ª–∞> <–ó–∞–≥–æ–ª–æ–≤–æ–∫ | –û–ø–∏—Å–∞–Ω–∏–µ>", 
                 "description": "–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —Å–¥–µ–ª–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä—É–º–µ"},
                {"name": "!closeexchange", 
                 "description": "–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç–∏–∫–µ—Ç —Å–¥–µ–ª–∫–∏"}
            ]
        })
    
    print("‚úÖ –ú–æ–¥—É–ª—å —Å–∏—Å—Ç–µ–º—ã —Å–¥–µ–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
