import discord
from discord.ext import commands
from discord.ui import Button, View, Modal, TextInput
import json
import os
import asyncio

SHOP_DATA_FILE = "data/shop_data.json"
CART_DATA_FILE = "data/user_carts.json"

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞
if os.path.exists(SHOP_DATA_FILE):
    try:
        with open(SHOP_DATA_FILE, "r") as f:
            content = f.read().strip()
            if content:
                shop_items = json.loads(content)
            else:
                shop_items = []
    except (json.JSONDecodeError, FileNotFoundError):
        shop_items = []
else:
    shop_items = []

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
for index, item in enumerate(shop_items, start=1):
    if "id" not in item:
        item["id"] = index
    if "discount" not in item:
        item["discount"] = 0
    if "channel_id" not in item:
        item["channel_id"] = None

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞
os.makedirs("data", exist_ok=True)
with open(SHOP_DATA_FILE, "w") as f:
    json.dump(shop_items, f, ensure_ascii=False, indent=4)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω
if os.path.exists(CART_DATA_FILE):
    try:
        with open(CART_DATA_FILE, "r") as f:
            content = f.read().strip()
            if content:
                user_carts = json.loads(content)
            else:
                user_carts = {}
    except (json.JSONDecodeError, FileNotFoundError):
        user_carts = {}
else:
    user_carts = {}

def save_cart_data():
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª"""
    os.makedirs("data", exist_ok=True)
    with open(CART_DATA_FILE, "w") as f:
        json.dump(user_carts, f, ensure_ascii=False, indent=4)

def save_shop_data():
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞ –≤ —Ñ–∞–π–ª"""
    for index, item in enumerate(shop_items, start=1):
        item["id"] = index
    os.makedirs("data", exist_ok=True)
    with open(SHOP_DATA_FILE, "w") as f:
        json.dump(shop_items, f, ensure_ascii=False, indent=4)

class ShopItemView(View):
    def __init__(self, item_name, price):
        super().__init__(timeout=None)
        self.item_name = item_name
        self.price = price

    @discord.ui.button(label="‚úî –î–æ–±–∞–≤–∏—Ç—å", style=discord.ButtonStyle.green)
    async def add_to_cart(self, interaction: discord.Interaction, button: Button):
        user_id = str(interaction.user.id)
        if user_id not in user_carts:
            user_carts[user_id] = []
        user_carts[user_id].append({"name": self.item_name, "price": self.price})
        save_cart_data()
        await interaction.response.send_message(f'‚úÖ {self.item_name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!', ephemeral=True, delete_after=10)

    @discord.ui.button(label="‚úñ –£–±—Ä–∞—Ç—å", style=discord.ButtonStyle.red)
    async def remove_from_cart(self, interaction: discord.Interaction, button: Button):
        user_id = str(interaction.user.id)
        if user_id in user_carts:
            for item in user_carts[user_id]:
                if item["name"] == self.item_name:
                    user_carts[user_id].remove(item)
                    save_cart_data()
                    await interaction.response.send_message(f'‚ùå {self.item_name} —É–±—Ä–∞–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.', ephemeral=True, delete_after=10)
                    return
        await interaction.response.send_message(f'‚ùó {self.item_name} –Ω–µ—Ç –≤ –≤–∞—à–µ–π –∫–æ—Ä–∑–∏–Ω–µ.', ephemeral=True, delete_after=10)

class CartManagerView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üëÅÔ∏è‚Äçüó®Ô∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å", style=discord.ButtonStyle.primary)
    async def show_cart(self, interaction: discord.Interaction, button: Button):
        user_id = str(interaction.user.id)
        user_cart = user_carts.get(user_id, [])
        if not user_cart:
            await interaction.response.send_message('‚ùó –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.', ephemeral=True)
            return
        cart_description = "\n".join([f"- {item['name']}: {item['price']}—Ä" for item in user_cart])
        total_price = sum(item['price'] for item in user_cart)
        embed = discord.Embed(title="üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞", description=cart_description, color=discord.Color.blue())
        embed.add_field(name="–ò—Ç–æ–≥–æ", value=f'{total_price}—Ä', inline=False)
        await interaction.response.send_message(embed=embed, ephemeral=True)

    @discord.ui.button(label="üóë –û—á–∏—Å—Ç–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def clear_cart(self, interaction: discord.Interaction, button: Button):
        user_id = str(interaction.user.id)
        user_carts[user_id] = []
        save_cart_data()
        await interaction.response.send_message("üóë –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞!", ephemeral=True)

    @discord.ui.button(label="üìù –ö –ø–æ–∫—É–ø–∫–µ", style=discord.ButtonStyle.success)
    async def order(self, interaction: discord.Interaction, button: Button):
        user_id = str(interaction.user.id)
        user_cart = user_carts.get(user_id, [])
        if not user_cart:
            await interaction.response.send_message("‚ùó –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.", ephemeral=True)
            return
        await interaction.response.send_modal(OrderForm())

class OrderForm(Modal, title="–§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞"):
    def __init__(self):
        super().__init__()
        self.coords = TextInput(label="–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã...")
        self.dimension = TextInput(label="–ò–∑–º–µ—Ä–µ–Ω–∏–µ", placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ...")
        self.username = TextInput(label="–í–∞—à –Ω–∏–∫", placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫...")
        self.comment = TextInput(label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", placeholder="–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ", required=False)
        self.add_item(self.coords)
        self.add_item(self.dimension)
        self.add_item(self.username)
        self.add_item(self.comment)

    async def on_submit(self, interaction: discord.Interaction):
        user_id = str(interaction.user.id)
        if user_id not in user_carts or not user_carts[user_id]:
            await interaction.response.send_message("‚ùó –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –ù–µ–ª—å–∑—è –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.", ephemeral=True)
            return
        await create_ticket(
            interaction,
            coords=self.coords.value,
            dimension=self.dimension.value,
            username=self.username.value,
            comment=self.comment.value,
            cart=user_carts[user_id]
        )
        user_carts[user_id] = []
        save_cart_data()
        await interaction.response.send_message("‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω.", ephemeral=True)

async def create_ticket(interaction, coords, dimension, username, comment, cart):
    bot = interaction.client
    guild_id = int(os.getenv("GUILD_ID"))
    ticket_category_id = int(os.getenv("TICKET_CATEGORY_ID"))
    guild = bot.get_guild(guild_id)
    category = discord.utils.get(guild.categories, id=ticket_category_id)
    if not category:
        await interaction.followup.send("‚ùå –û—à–∏–±–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        return

    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False, send_messages=False),
        guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True),
        interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True)
    }

    admin_role = discord.utils.get(guild.roles, name="Admin")
    if admin_role:
        overwrites[admin_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

    ticket_channel = await category.create_text_channel(
        f'–∑–∞–∫–∞–∑-{interaction.user.name}',
        overwrites=overwrites
    )

    cart_description = "\n".join([f"- {item['name']}: {item['price']}—Ä" for item in cart]) or "–ü—É—Å—Ç–æ"
    total_price = sum(item['price'] for item in cart)

    embed = discord.Embed(title="üìù –ù–æ–≤—ã–π –∑–∞–∫–∞–∑", color=discord.Color.orange())
    embed.add_field(name="–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", value=coords, inline=False)
    embed.add_field(name="–ò–∑–º–µ—Ä–µ–Ω–∏–µ", value=dimension, inline=False)
    embed.add_field(name="–ù–∏–∫", value=username, inline=False)
    embed.add_field(name="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", value=comment or "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", inline=False)
    embed.add_field(name="–ö–æ—Ä–∑–∏–Ω–∞", value=cart_description, inline=False)
    embed.add_field(name="–ò—Ç–æ–≥–æ", value=f'{total_price}—Ä', inline=False)
    embed.add_field(name="–ü–æ–∫—É–ø–∞—Ç–µ–ª—å", value=f"{interaction.user.mention}", inline=False)
    embed.timestamp = discord.utils.utcnow()

    await ticket_channel.send(embed=embed)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞
    time_notice_embed = discord.Embed(
        title="‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞",
        description="**–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ!** –ú–∞–≥–∞–∑–∏–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 11:00 –¥–æ 22:00 –ø–æ –ú–°–ö.\n–ó–∞–∫–∞–∑—ã, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–µ –≤–Ω–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.",
        color=discord.Color.blue()
    )

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –Ω–µ–∑–µ—Ä—É
    delivery_notice_embed = discord.Embed(
        title="üöö –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –Ω–µ–∑–µ—Ä—É",
        description="**–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!** –î–æ—Å—Ç–∞–≤–∫–∞ —Å–≤—ã—à–µ 5000 –±–ª–æ–∫–æ–≤ –ø–æ –Ω–µ–∑–µ—Ä—É –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 2—Ä/1000 –±–ª–æ–∫–æ–≤.\n–ü–µ—Ä–≤—ã–µ 5000 –±–ª–æ–∫–æ–≤ –≤–∫–ª—é—á–µ–Ω—ã –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ –∏ –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ.",
        color=discord.Color.gold()
    )

    await ticket_channel.send(embed=time_notice_embed)
    await ticket_channel.send(embed=delivery_notice_embed)
    await ticket_channel.send(f"{interaction.user.mention}, –≤–∞—à –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!")

async def update_shop(bot):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –º–∞–≥–∞–∑–∏–Ω–∞ —Å–æ –≤—Å–µ–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏"""
    shop_channel_id = int(os.getenv("SHOP_CHANNEL_ID"))
    channel = bot.get_channel(shop_channel_id)
    if not channel:
        print(f"‚ùå –ö–∞–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞ —Å ID {shop_channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã
    channel_ids = set([shop_channel_id])
    for item in shop_items:
        if item.get("channel_id"):
            channel_ids.add(int(item.get("channel_id")))

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –≤ –∫–∞–∂–¥–æ–º –∫–∞–Ω–∞–ª–µ
    for channel_id in channel_ids:
        target_channel = bot.get_channel(channel_id)
        if not target_channel:
            print(f"‚ùå –ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
            
        # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
        async for message in target_channel.history(limit=200):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–º–±–µ–¥ (—Ç–æ–≤–∞—Ä)
            if message.author == bot.user and message.embeds and len(message.embeds) > 0:
                try:
                    await message.delete()
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ {target_channel.name}")

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞–Ω–∞–ª–∞–º
    channel_items = {}
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞
    channel_items[shop_channel_id] = []
    
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º
    for item in shop_items:
        channel_id = item.get("channel_id")
        
        # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª —É–∫–∞–∑–∞–Ω –∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª
        if channel_id and bot.get_channel(int(channel_id)):
            if int(channel_id) not in channel_items:
                channel_items[int(channel_id)] = []
            channel_items[int(channel_id)].append(item)
        else:
            # –ò–Ω–∞—á–µ —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞
            channel_items[shop_channel_id].append(item)

    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö
    for channel_id, items in channel_items.items():
        target_channel = bot.get_channel(channel_id)
        
        if not target_channel:
            print(f"‚ùå –ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
        
        # –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
        for item in items:
            original_price = item["price"]
            discount = item.get("discount", 0)
            final_price = original_price - discount
            
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Å —Ü–µ–Ω–æ–π –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞
            price_text = f'–¶–µ–Ω–∞: ~~{original_price}—Ä~~ **{final_price}—Ä**\n' if discount > 0 else f'–¶–µ–Ω–∞: {original_price}—Ä\n'
            description_text = item.get("description", "") or ""
            full_description = f"{price_text}\n{description_text}" if description_text else price_text
            
            embed = discord.Embed(
                title=item["name"], 
                description=full_description,
                color=discord.Color.green()
            )
            
            if "image" in item and item["image"]:
                embed.set_image(url=item["image"])
            
            view = ShopItemView(item["name"], final_price)
            await target_channel.send(embed=embed, view=view)

        print(f"‚úÖ –¢–æ–≤–∞—Ä—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ {len(channel_items)} –∫–∞–Ω–∞–ª–∞—Ö")

async def update_cart_channel(bot):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∫–æ—Ä–∑–∏–Ω—ã —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∫–æ—Ä–∑–∏–Ω—ã"""
    cart_channel_id = int(os.getenv("CART_CHANNEL_ID"))
    channel = bot.get_channel(cart_channel_id)
    if not channel:
        return

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ—Ä–∑–∏–Ω–æ–π
    async for message in channel.history(limit=50):
        if message.author == bot.user and message.embeds and len(message.embeds) > 0:
            try:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∫–æ—Ä–∑–∏–Ω–æ–π
                if message.embeds[0].title == "üõí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π":
                    await message.delete()
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {e}")

    embed = discord.Embed(title="üõí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π", description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∫–æ—Ä–∑–∏–Ω–æ–π", color=discord.Color.gold())
    view = CartManagerView()
    await channel.send(embed=embed, view=view)

async def setup_shop(bot):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∫–æ—Ä–∑–∏–Ω—ã"""
    await update_shop(bot)
    await update_cart_channel(bot)
    print("‚úÖ –ú–æ–¥—É–ª—å –º–∞–≥–∞–∑–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω")
