import discord
from discord.ext import commands
from discord.ui import Button, View, Modal, TextInput, Select
import json
import os
import asyncio

#–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –º–æ–¥—É–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
from modules.shop_system import shop_items, save_shop_data, update_shop

class AdminPanelView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", style=discord.ButtonStyle.green)
    async def add_item(self, interaction: discord.Interaction, button: Button):
        modal = AddItemModal()
        await interaction.response.send_modal(modal)

    @discord.ui.button(label="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä", style=discord.ButtonStyle.primary)
    async def edit_item(self, interaction: discord.Interaction, button: Button):
        if not shop_items:
            await interaction.response.send_message("‚ùó –í –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.", ephemeral=True)
            return

        select_view = EditItemSelectView()
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", view=select_view, ephemeral=True)

    @discord.ui.button(label="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", style=discord.ButtonStyle.danger)
    async def delete_item(self, interaction: discord.Interaction, button: Button):
        if not shop_items:
            await interaction.response.send_message("‚ùó –í –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", ephemeral=True)
            return

        select_view = DeleteItemSelectView()
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", view=select_view, ephemeral=True)

    @discord.ui.button(label="–ü–æ–∫–∞–∑–∞—Ç—å ID —Ç–æ–≤–∞—Ä–æ–≤", style=discord.ButtonStyle.secondary)
    async def show_item_ids(self, interaction: discord.Interaction, button: Button):
        if not shop_items:
            await interaction.response.send_message("‚ùó –í –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.", ephemeral=True)
            return

        item_list = "\n".join([f"üîπ {item['name']} ‚Äî ID: {item['id']}, –ö–∞–Ω–∞–ª: {item.get('channel_id', '–û—Å–Ω–æ–≤–Ω–æ–π')}" for item in shop_items])
        embed = discord.Embed(title="üìú –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤", description=item_list, color=discord.Color.blue())
        await interaction.response.send_message(embed=embed, ephemeral=True)

class EditItemSelectView(View):
    def __init__(self):
        super().__init__()
        self.add_item(EditItemSelect())

class EditItemSelect(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label=item["name"], value=str(item["id"]), description=f"ID: {item['id']}")
            for item in shop_items
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä", options=options)

    async def callback(self, interaction: discord.Interaction):
        item_id = int(self.values[0])
        item = next((item for item in shop_items if item["id"] == item_id), None)
        if item:
            modal = EditItemModal(item)
            await interaction.response.send_modal(modal)

class DeleteItemSelectView(View):
    def __init__(self):
        super().__init__()
        self.add_item(DeleteItemSelect())

class DeleteItemSelect(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label=item["name"], value=str(item["id"]), description=f"ID: {item['id']}")
            for item in shop_items
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", options=options)

    async def callback(self, interaction: discord.Interaction):
        item_id = int(self.values[0])
        item = next((item for item in shop_items if item["id"] == item_id), None)
        
        if item:
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            embed = discord.Embed(
                title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                description=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä **{item['name']}** (ID: {item['id']})?",
                color=discord.Color.red()
            )
            
            # –°–æ–∑–¥–∞–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirm_view = ConfirmDeleteView(item_id)
            await interaction.response.send_message(embed=embed, view=confirm_view, ephemeral=True)

class ConfirmDeleteView(View):
    def __init__(self, item_id):
        super().__init__(timeout=60)
        self.item_id = item_id

    @discord.ui.button(label="–î–∞, —É–¥–∞–ª–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def confirm(self, interaction: discord.Interaction, button: Button):
        item = next((i for i in shop_items if i["id"] == self.item_id), None)
        
        if not item:
            await interaction.response.send_message(f"‚ùó –û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä —Å ID {self.item_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return
        
        item_name = item['name']
        shop_items.remove(item)
        save_shop_data()
        await update_shop(interaction.client)
        
        await interaction.response.send_message(f"‚úÖ –¢–æ–≤–∞—Ä **{item_name}** (ID: {self.item_id}) —É–¥–∞–ª—ë–Ω!", ephemeral=True)
        self.stop()

    @discord.ui.button(label="–û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary)
    async def cancel(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_message("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", ephemeral=True)
        self.stop()

class AddItemModal(Modal, title="–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"):
    def __init__(self):
        super().__init__()
        self.name = TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", required=True)
        self.price = TextInput(label="–¶–µ–Ω–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É", required=True)
        self.discount = TextInput(label="–°–∫–∏–¥–∫–∞ –≤ —Ä—É–±–ª—è—Ö", placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–∫–∏–¥–∫–∏", required=False)
        self.description = TextInput(label="–û–ø–∏—Å–∞–Ω–∏–µ", placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", required=False)
        # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ ID –∫–∞–Ω–∞–ª–∞ –≤ –æ–¥–Ω–æ –ø–æ–ª–µ
        self.image_and_channel = TextInput(
            label="URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è | ID –∫–∞–Ω–∞–ª–∞",
            placeholder="URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è | ID –∫–∞–Ω–∞–ª–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
            required=False
        )
        self.add_item(self.name)
        self.add_item(self.price)
        self.add_item(self.discount)
        self.add_item(self.description)
        self.add_item(self.image_and_channel)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            price = int(self.price.value)
            discount = int(self.discount.value) if self.discount.value.strip() else 0
            if discount >= price:
                raise ValueError("–°–∫–∏–¥–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ —Ü–µ–Ω–µ —Ç–æ–≤–∞—Ä–∞")

            # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ ID –∫–∞–Ω–∞–ª–∞
            image_url = None
            channel_id = None
            if "|" in self.image_and_channel.value:
                parts = self.image_and_channel.value.split("|", 1)
                image_url = parts[0].strip() if parts[0].strip() else None
                if parts[1].strip() and parts[1].strip().lower() != "none":
                    channel_id = int(parts[1].strip())
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
                    channel = interaction.client.get_channel(channel_id)
                    if not channel:
                        raise ValueError(f"–ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                # –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω,—Ç–æ —ç—Ç–æ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_url = self.image_and_channel.value.strip() if self.image_and_channel.value.strip() else None
        except ValueError as e:
            await interaction.response.send_message(f"‚ùó –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)
            return

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID —Ç–æ–≤–∞—Ä–∞
        new_id = 1
        if shop_items:
            new_id = max(item["id"] for item in shop_items) + 1

        new_item = {
            "id": new_id,
            "name": self.name.value,
            "price": price,
            "discount": discount,
            "description": self.description.value if self.description.value.strip() else None,
            "image": image_url,
            "channel_id": channel_id
        }

        shop_items.append(new_item)
        save_shop_data()
        await update_shop(interaction.client)

        channel_info = f" –≤ –∫–∞–Ω–∞–ª —Å ID {channel_id}" if channel_id else ""
        await interaction.response.send_message(f"‚úÖ –¢–æ–≤–∞—Ä **{self.name.value}** –¥–æ–±–∞–≤–ª–µ–Ω{channel_info}!", ephemeral=True)

class EditItemModal(Modal, title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä"):
    def __init__(self, item):
        super().__init__()
        self.name = TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ", default=item["name"], required=True)
        self.price = TextInput(label="–¶–µ–Ω–∞", default=str(item["price"]), required=True)
        self.discount = TextInput(label="–°–∫–∏–¥–∫–∞ –≤ —Ä—É–±–ª—è—Ö", default=str(item.get("discount", 0)), required=False)
        self.description = TextInput(label="–û–ø–∏—Å–∞–Ω–∏–µ", default=item.get("description", ""), required=False)
        
        # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ ID –∫–∞–Ω–∞–ª–∞
        image_value = item.get("image", "") or ""  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ None –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—Å—è –≤ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        channel_id = item.get("channel_id")
        channel_value = str(channel_id) if channel_id is not None else ""
        combined_value = f"{image_value} | {channel_value}" if channel_value else image_value
        
        self.image_and_channel = TextInput(
            label="URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è | ID –∫–∞–Ω–∞–ª–∞",
            default=combined_value,
            placeholder="URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è | ID –∫–∞–Ω–∞–ª–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
            required=False
        )
        
        self.item_id = item["id"]
        
        self.add_item(self.name)
        self.add_item(self.price)
        self.add_item(self.discount)
        self.add_item(self.description)
        self.add_item(self.image_and_channel)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            price = int(self.price.value)
            discount = int(self.discount.value) if self.discount.value.strip() else 0
            if discount >= price:
                raise ValueError("–°–∫–∏–¥–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ —Ü–µ–Ω–µ —Ç–æ–≤–∞—Ä–∞")

            # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ ID –∫–∞–Ω–∞–ª–∞
            image_url = None
            channel_id = None
            if "|" in self.image_and_channel.value:
                parts = self.image_and_channel.value.split("|", 1)
                image_url = parts[0].strip() if parts[0].strip() else None
                if parts[1].strip() and parts[1].strip().lower() != "none":
                    channel_id = int(parts[1].strip())
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
                    channel = interaction.client.get_channel(channel_id)
                    if not channel:
                        raise ValueError(f"–ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                # –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω,—Ç–æ —ç—Ç–æ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_url = self.image_and_channel.value.strip() if self.image_and_channel.value.strip() else None
        except ValueError as e:
            await interaction.response.send_message(f"‚ùó –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)
            return

        item = next((i for i in shop_items if i["id"] == self.item_id), None)
        if item:
            item["name"] = self.name.value
            item["price"] = price
            item["discount"] = discount
            item["description"] = self.description.value if self.description.value.strip() else None
            item["image"] = image_url
            item["channel_id"] = channel_id
            
            save_shop_data()
            await update_shop(interaction.client)
            
            channel_info = f" –≤ –∫–∞–Ω–∞–ª —Å ID {channel_id}" if channel_id else ""
            await interaction.response.send_message(f"‚úÖ –¢–æ–≤–∞—Ä **{self.name.value}** –æ–±–Ω–æ–≤–ª—ë–Ω{channel_info}!", ephemeral=True)

async def update_admin_panel(bot):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    admin_channel_id = int(os.getenv("ADMIN_CHANNEL_ID"))
    channel = bot.get_channel(admin_channel_id)
    
    if not channel:
        return
    
    await channel.purge()
    embed = discord.Embed(
        title="üîß –ê–¥–º–∏–Ω-–º–µ–Ω—é", 
        description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–æ–º", 
        color=discord.Color.red()
    )
    embed.set_footer(text="‚ú® Powered by MrFolium ‚ú®")
    
    view = AdminPanelView()
    await channel.send(embed=embed, view=view)


async def setup_admin_commands(bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥"""
    await update_admin_panel(bot)

    @bot.command(name="say")
    @commands.has_permissions(administrator=True)
    async def say(ctx, channel: discord.TextChannel, *, message):
        await ctx.message.delete()
        await channel.send(message)

    @bot.command(name="embed")
    @commands.has_permissions(administrator=True)
    async def embed_say(ctx, channel: discord.TextChannel, *, message):
        await ctx.message.delete()
        # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
        if "|" in message:
            title, description = message.split("|", 1)
        else:
            title = ""
            description = message

        embed = discord.Embed(
            title=title.strip(),
            description=description.strip(),
            color=discord.Color.green()
        )
        await channel.send(embed=embed)

    @bot.command(name="close")
    @commands.has_permissions(administrator=True)
    async def close_ticket(ctx):
        if not ctx.channel.name.startswith('–∑–∞–∫–∞–∑-'):
            await ctx.send("‚ùó –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ç–∏–∫–µ—Ç–∞—Ö!")
            return

        review_channel_id = int(os.getenv("REVIEW_CHANNEL_ID"))
        review_channel = bot.get_channel(review_channel_id)

        ticket_user = ctx.guild.get_member_named(ctx.channel.name.replace('–∑–∞–∫–∞–∑-', ''))

        if ticket_user and review_channel:
            try:
                member_role = discord.utils.get(ctx.guild.roles, name="–£—á–∞—Å—Ç–Ω–∏–∫")
                if member_role:
                    await ticket_user.add_roles(member_role)
                    await ctx.send(f"‚úÖ –†–æ–ª—å '–£—á–∞—Å—Ç–Ω–∏–∫' –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {ticket_user.mention}")
                else:
                    await ctx.send("‚ùå –†–æ–ª—å '–£—á–∞—Å—Ç–Ω–∏–∫' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏: {e}")

            await review_channel.send(
                f"{ticket_user.mention}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! "
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ."
            )

            await ctx.send("‚úÖ –¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            await asyncio.sleep(5)
            await ctx.channel.delete()

    @close_ticket.error
    async def close_ticket_error(ctx, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")


        @close_ticket.error
        async def close_ticket_error(ctx, error):
            if isinstance(error, commands.MissingPermissions):
                await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")

    @bot.command(name="itemids")
    @commands.has_permissions(administrator=True)
    async def show_item_ids(ctx):
        await ctx.message.delete()
        
        if not shop_items:
            await ctx.send("‚ùó –í –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.", delete_after=5)
            return

        item_list = "\n".join([
            f"üîπ {item['name']} ‚Äî ID: {item['id']}, –ö–∞–Ω–∞–ª: {item.get('channel_id', '–û—Å–Ω–æ–≤–Ω–æ–π')}"
            for item in shop_items
        ])
        
        embed = discord.Embed(title="üìú –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤", description=item_list, color=discord.Color.blue())
        
        message = await ctx.send(embed=embed)
        await asyncio.sleep(30)
        await message.delete()


    # –ö–æ–º–∞–Ω–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
    @bot.command(name="updateshop")
    @commands.has_permissions(administrator=True)
    async def update_shop_command(ctx):
        await ctx.message.delete()
        await update_shop(bot)
        await ctx.send("‚úÖ –ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!", delete_after=5)

    # –ö–æ–º–∞–Ω–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    @bot.command(name="updateadmin")
    @commands.has_permissions(administrator=True)
    async def update_admin_command(ctx):
        await ctx.message.delete()
        await update_admin_panel(bot)
        await ctx.send("‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞!", delete_after=5)

    # –ö–æ–º–∞–Ω–¥–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–∞–Ω–∞–ª–∞
    @bot.command(name="clear")
    @commands.has_permissions(administrator=True)
    async def clear_channel(ctx, amount: int = 100):
        await ctx.message.delete()
        deleted = await ctx.channel.purge(limit=amount)
        message = await ctx.send(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π!")
        await asyncio.sleep(5)
        await message.delete()

    @clear_channel.error
    async def clear_channel_error(ctx, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", delete_after=5)
        elif isinstance(error, commands.BadArgument):
            await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!", delete_after=5)

    # –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    @bot.command(name="dm")
    @commands.has_permissions(administrator=True)
    async def dm_user(ctx, user: discord.Member, *, message):
        await ctx.message.delete()
        try:
            await user.send(message)
            await ctx.send(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention}!", delete_after=5)
        except discord.Forbidden:
            await ctx.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention}. –í–æ–∑–º–æ–∂–Ω–æ, —É –Ω–µ–≥–æ –∑–∞–∫—Ä—ã—Ç—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.", delete_after=10)

    @dm_user.error
    async def dm_user_error(ctx, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", delete_after=5)
        elif isinstance(error, commands.MemberNotFound):
            await ctx.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!", delete_after=5)
        elif isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ü—Ä–∏–º–µ—Ä: !dm @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è", delete_after=10)

    # –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    @bot.command(name="announce")
    @commands.has_permissions(administrator=True)
    async def announce(ctx, channel: discord.TextChannel, *, message):
        await ctx.message.delete()
        embed = discord.Embed(
            title="üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ",
            description=message,
            color=discord.Color.gold(),
            timestamp=discord.utils.utcnow()
        )
        embed.set_footer(text=f"–û—Ç {ctx.author.display_name}", icon_url=ctx.author.display_avatar.url)
        await channel.send(embed=embed)
        await ctx.send(f"‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {channel.mention}!", delete_after=5)

    @announce.error
    async def announce_error(ctx, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", delete_after=5)
        elif isinstance(error, commands.ChannelNotFound):
            await ctx.send("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", delete_after=5)
        elif isinstance(error, commands.MissingRequiredArgument):
            await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª –∏ —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è! –ü—Ä–∏–º–µ—Ä: !announce #–∫–∞–Ω–∞–ª —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è", delete_after=10)

    # –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ–ø–ª–∞—Ç—ã
    @bot.command(name="pay")
    @commands.has_permissions(administrator=True)
    async def send_payment_info(ctx):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã –≤ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª"""
        await ctx.message.delete()
        
        # –î–∞–Ω–Ω—ã–µ –æ–ø–ª–∞—Ç—ã
        card_number = os.getenv("CARD_NUMBER")
        card_holder = os.getenv("CARD_HOLDER")
        bank = os.getenv("BANK_NAME")
        
        # –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ–ø–ª–∞—Ç—ã
        embed = discord.Embed(
            title="üí≥ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã",
            description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:",
            color=discord.Color.green()
        )
        
        embed.add_field(name="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã", value=f"```\n{card_number}\n```", inline=False)
        embed.add_field(name="–ü–æ–ª—É—á–∞—Ç–µ–ª—å", value=card_holder, inline=False)
        embed.add_field(name="–ë–∞–Ω–∫", value=bank, inline=True)
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        embed.add_field(
            name="–ß—Ç–æ –¥–µ–ª–∞—Ç—å",
            value=(
                "1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç—É\n"
                "2. –°–∫–∞—á–∞–π—Ç–µ —á–µ–∫\n"
                "3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª"
            ),
            inline=False
        )
        
        await ctx.send(embed=embed)

    @send_payment_info.error
    async def payment_info_error(ctx, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!", delete_after=5)


    print("‚úÖ –ú–æ–¥—É–ª—å –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥ –∑–∞–≥—Ä—É–∂–µ–Ω")        
