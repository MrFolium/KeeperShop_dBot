import discord
from discord.ext import commands
import os
from dotenv import load_dotenv
import asyncio
import traceback
import datetime
import sys
import logging
import importlib
import time
import fcntl

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
os.makedirs("logs", exist_ok=True)
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("logs/bot.log", encoding="utf-8"),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger("bot")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)

# –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –∏–≥—Ä–µ
start_time = int(time.time())

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
sys.path.append('modules')
from modules import shop_system
from modules import admin_commands
from modules import exchange_system

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
async def initialize_modules():
    try:
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π...")
        
        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ –º–æ–¥—É–ª–µ–π
        await shop_system.setup_shop(bot)
        await admin_commands.setup_admin_commands(bot)
        await exchange_system.setup_exchange_system(bot)
        
        logger.info("–í—Å–µ –º–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π: {e}")
        traceback.print_exc()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
@bot.event
async def on_ready():
    logger.info(f"–ë–æ—Ç {bot.user.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π
    await initialize_modules()
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    await bot.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.playing,
            name="mioclient.me",
            start=start_time
        )
    )
    
    logger.info("–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        return
    
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã {ctx.command}: {error}")
    await ctx.send(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}")

@bot.event
async def on_error(event, *args, **kwargs):
    logger.error(f"–û—à–∏–±–∫–∞ –≤ —Å–æ–±—ã—Ç–∏–∏ {event}: {traceback.format_exc()}")

@bot.command(name="adminhelp")
@commands.has_permissions(administrator=True)
async def admin_help_command(ctx):
    """–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    embed = discord.Embed(
        title="üìö –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
        color=discord.Color.blue()
    )
    
    embed.add_field(
        name="üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º",
        value="!restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–¥—É–ª–∏ –±–æ—Ç–∞\n"
              "!close - –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç\n"
              "!embed <–∑–∞–≥–æ–ª–æ–≤–æ–∫> | <–æ–ø–∏—Å–∞–Ω–∏–µ> - –°–æ–∑–¥–∞—Ç—å —ç–º–±–µ–¥\n"
              "!say <—Å–æ–æ–±—â–µ–Ω–∏–µ> - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞",
        inline=False
    )
    
    # –†–∞–∑–¥–µ–ª —Å–∏—Å—Ç–µ–º—ã –æ–±–º–µ–Ω–∞
    embed.add_field(
        name="üîÑ –°–∏—Å—Ç–µ–º–∞ –æ–±–º–µ–Ω–∞",
        value="!createexchange <ID –∫–∞–Ω–∞–ª–∞> <–ó–∞–≥–æ–ª–æ–≤–æ–∫> | <–û–ø–∏—Å–∞–Ω–∏–µ> - –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç —Å –∫–Ω–æ–ø–∫–æ–π –æ–±–º–µ–Ω–∞\n"
              "!closeexchange - –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç –æ–±–º–µ–Ω–∞",
        inline=False
    )
    
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ {ctx.author.name}", icon_url=ctx.author.display_avatar.url)
    
    await ctx.send(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª–µ–π
@bot.command(name="restart")
@commands.has_permissions(administrator=True)
async def restart_modules(ctx):
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –º–æ–¥—É–ª–µ–π –±–æ—Ç–∞"""
    try:
        message = await ctx.send("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –º–æ–¥—É–ª–µ–π...")
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π
        importlib.reload(sys.modules['modules.shop_system'])
        importlib.reload(sys.modules['modules.admin_commands'])
        importlib.reload(sys.modules['modules.exchange_system'])
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π –∑–∞–Ω–æ–≤–æ
        await initialize_modules()
        
        await message.edit(content="‚úÖ –ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!")
        logger.info("–ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –º–æ–¥—É–ª–µ–π: {e}")
        traceback.print_exc()
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –º–æ–¥—É–ª–µ–π: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        pid_file = 'bot.pid'
        fp = open(pid_file, 'w')
        try:
            fcntl.lockf(fp, fcntl.LOCK_EX | fcntl.LOCK_NB)
        except IOError:
            # –î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω
            logger.error("–î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
            print("‚ùå –û—à–∏–±–∫–∞: –î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω.")
            sys.exit(1)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
        token = os.getenv("TOKEN")
        if not token:
            logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ .env")
            print("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ .env")
            sys.exit(1)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        os.makedirs("data", exist_ok=True)
        os.makedirs("logs", exist_ok=True)
        os.makedirs("texts", exist_ok=True)
        os.makedirs("data/exchanges", exist_ok=True)
        
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        bot.run(token)
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        traceback.print_exc()
